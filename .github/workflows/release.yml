name: release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    if: startsWith(github.ref, 'refs/tags/')

    runs-on: ubuntu-latest

    steps:
      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: mikepenz/action-gh-release@v0.2.0-a03
        with:
          body: ${{steps.github_release.outputs.CHANGELOG}}

      - name: Create release url file
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt

      - name: Save release url file for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  publish:
    needs: [release]

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: '3.7'

      - name: Install main
        shell: bash -l {0}
        run: |
          pip install .

      - name: Run pyinstaller without PyTorch
        shell: bash -l {0}
        run: |
          pip install pyinstaller
          pyinstaller --exclude-module=torch  annolid.spec

      - name: Load release url file from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url

      - name: Get release file name & upload url
        id: get_release_info
        run: |
          echo "::set-output name=upload_url::$(cat release_url/release_url.txt)"

      - name: Upload release assets
        id: upload_release_assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./dist
          asset_name: annolid-${{ runner.os }}
          asset_content_type: application/octet-stream
